# This is a basic workflow to help you get started with MATLAB Actions

name: MATLAB Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Sets up MATLAB on the GitHub Actions runner
      - name: Setup MATLAB
        uses: matlab-actions/setup-matlab@v2

      - name: Run tests
        uses: matlab-actions/run-tests@v2
        with:
          source-folder: code
          test-results-junit: results.xml

      - run: ls

      - uses: actions/upload-artifact@v3
        with:
          path: results.xml
          name: results.xml
      
      # - name: Run build
      #   uses: matlab-actions/run-build@v2.4.0

      # - run: |
      #     echo $RUNNER_TEMP
      #     cd $RUNNER_TEMP
      #     ls
      #     cat "buildSummary${GITHUB_RUN_ID}.json"

      - uses: dorny/test-reporter@v1.9.1
        with:
          artifact: /results(.*)/
          name: results
          path: '*.xml'
          reporter: java-junit
      
      - run: |
          echo "::error file=tAnswerIsCorrect.m,line=10,endLine=12,title=Run MATLAB Tests exited with non-zero exit code::Verification failed in tAnswerIsCorrect/verifyCorrect"
          exit 1

      # As an alternative to run-tests, you can use run-command to execute a MATLAB script, function, or statement.
      #- name: Run all tests
      #  uses: matlab-actions/run-command@v1
      #  with:
      #    command: addpath('code'); results = runtests('IncludeSubfolders', true); assertSuccess(results);
